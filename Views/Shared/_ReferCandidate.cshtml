@using Kendo.Mvc.UI
@model Employee

@*<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);
</script>*@

@using (Html.BeginForm("UploadReferral", "Employee", FormMethod.Post, new { @id = "form1" , enctype = "multipart/form-data"  }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.JobId, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.DisplayFor(m => m.JobId)
                @Html.HiddenFor(m => m.JobId)

            </div>
        </div>
    </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.CandidateName, htmlAttributes: new { @class = "control-label" })&nbsp;*
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.CandidateName, new {@class="form-control"})
                @Html.ValidationMessageFor(model => model.CandidateName, "", new { @class = "text-danger", style = "font-weight: bold;" , required = "required" })
               
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.CandidateSurname, htmlAttributes: new { @class = "control-label" })&nbsp;*
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.CandidateSurname, new { @class = "form-control" })
              

                 
                @*@Html.ValidationMessageFor(model => model.CandidateSurname, "", new { @class = "text-danger", style = "font-weight: bold;" })*@

            </div>
        </div>
    </div>
    
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label" })&nbsp;*
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control" })</div>
           
        </div>
    </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })&nbsp;*
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control" })</div>
           
            </div>
        </div>


    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label" })&nbsp;*
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.File, new { type = "file", @id = "filedata" , @class = "btn btn-default btn-file" })
            </div>
        </div>
    </div>
    <div class="row">
        <br />
        <div class="col-md-8">
            <span id="MonoErrorMessage"></span>
        </div>
    </div>
       
        <div class="form-group">
        
           
                <button type="submit" onclick="return validateForm();" class="btn btn-success float-right">Save</button>
                <div class="col-md-2">
                </div>
                @*<input style="margin-left: 30px" type="submit" value="Save" class="btn btn-success" />*@
                <button type="button" class="btn btn-secondary float-right" id="cancel" style="margin-right:20px">Cancel</button>
          
       

    </div>
</div>
}  


<script>

    function Validate(){

        // returns a promise that can be used later. 
       return $.ajax
        ({ 
            url: "/Employee/ValidateReferral",
            data: { "Name": $('#CandidateName').val(), "MobNo": $('#MobileNumber').val(), "LastName": $('#CandidateSurname').val()},
            type: 'post',
            async: false ,
            success: function (response) {
                debugger;

                if (response.success) {
                    // alert(response.responseText);
                } else {
                    event.preventDefault();
                    // DoSomethingElse()
                    $('#MonoErrorMessage').text(response.responseText).css('color', 'red');
                }  
            }
        });
    }


    function validateForm() {
        debugger;
        if ($('#filedata').val() === "" || $('#MobileNumber').val() === "" || $('#CandidateSurname').val() === "" || $('#CandidateName').val() === "" || $('#EmailId').val() === "") {
            $('#MonoErrorMessage').text("Please submit all required fields").css('color', 'red');
            $('#MonoErrorMessage').show();
            event.preventDefault();
        } else {
            $('#MonoErrorMessage').text("");
        }

        Validate().then(function(data) {
            debugger;
            // Run this when your request was successful
            console.log(data)
        }).catch(function(err) {
            // Run this when promise was rejected via reject()
            console.log(err)
        });


    }

    $("#cancel").click(function(){
        $("#Details").data("kendoWindow").close();
     
    })
</script>

<style>
    .btn-file {
        position: relative;
        overflow: hidden;
    }
    .btn-file input[type=file] {
        position: absolute;
        top: 0;
        right: 0;
        min-width: 100%;
        min-height: 100%;
        font-size: 100px;
        text-align: right;
        filter: alpha(opacity=0);
        opacity: 0;
        outline: none;
        background: white;
        cursor: inherit;
        display: block;
    }
</style>