
@{
    ViewData["Title"] = "Employee";
}

@using Microsoft.Graph
@model List<User>
@using Kendo.Mvc
@using Kendo.Mvc.UI

@(Html.Kendo().Grid<Employee>
                        ()
                        .Name("gridEmployee")
                        .ColumnMenu(col => col.Filterable(false))
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.JobId).Title("JobId").Width(100);
                            columns.Bound(p => p.BusinessUnit).Title("BU").Width(100);
                            columns.Bound(p => p.Position).Width(100);
                            columns.Bound(p => p.Experience).Width(100);
                            columns.Bound(p => p.Location).Width(100);
                            columns.Bound(p => p.NoOfVacancies).Width(100);
                            // columns.Bound(p => p.ClosingDate).Width(100);
                            columns.Command(command => command.Custom("Refer").Click("showDetails")).Width(180);
                        })
                        .Height(500).Width(1200)
                        .Editable(editable => editable.Mode(GridEditMode.PopUp))
                        .Pageable()
                        .Sortable()
                        .Navigatable()
                        .Resizable(r => r.Columns(true))
                        .Reorderable(r => r.Columns(true))
                        .Groupable(g => g.ShowFooter(false))
                        .Filterable()
                        .Scrollable()
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .PageSize(20)
                        .AutoSync(true)
                        .ServerOperation(false)
                        .Events(events => events.Error("error_handler"))
                            .Read("GetAllPositions", "Employee")))


@*@(Html.Kendo().Window().Name("Details")
      .Title("Refer Candidate").Content(@<text>
                                             <div id="wndContent">

                                             </div>
                                          </text>)
      .Visible(false)
      .Modal(true)
      .Draggable(true)
      .Width(600)
      .Height(500)
      )*@

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }




    function showDetails(e) {
     
        var pwrid = $(this)[0].JobId;

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var wnd = $("#Details").data("kendoWindow");

        window.location = '@Url.Action("MyReferrals", "Employee", new { jobId = "ID"  })'.replace("ID", dataItem.JobId);

        //$('#wndContent').load('/Employee/ReferCandidate/', { id: dataItem.JobId, bu: dataItem.BusinessUnit}, function (response, status, xhr) {
            
        //    wnd.open().center();
        //    });
        //wnd.content(detailsTemplate(dataItem));
       // wnd.center().open();
    }

    function onDataBound(e) {
        var grid = this;
        grid.table.find("tr").each(function () {
            var dataItem = grid.dataItem(this);
            debugger;
            var type = dataItem.Discontinued ? 'success' : 'error';
            var text = dataItem.Discontinued ? 'available' : 'not available';

            $(this).find('script').each(function () {
                eval($(this).html());
            });

            $(this).find(".badgeTemplate").kendoBadge({
                type: type,
                value: text,
            });


            kendo.bind($(this), dataItem);
        });
    }

    function returnFalse() {
        return false;
    }
</script>


<style>
    .k-grid tr .checkbox-align {
        text-align: center;
        vertical-align: middle;
    }

    .product-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-right: 5px;
    }

    .product-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }

    .k-rating-container .k-rating-item {
        padding: 4px 0;
    }

        .k-rating-container .k-rating-item .k-icon {
            font-size: 16px;
        }

    .dropdown-country-wrap {
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        white-space: nowrap;
    }

        .dropdown-country-wrap img {
            margin-right: 10px;
        }

    #grid .k-grid-edit-row > td > .k-rating {
        margin-left: 0;
        width: 100%;
    }
</style>


